name: Node.js CI with Parallelism

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.nvm.outputs.NVMRC }}
    steps:
    - name: Check for Changes in test_file.txt
      id: changes
      run: |
        git fetch origin ${{ github.base_ref }}
        CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} | grep 'test_file.txt' || true)
        echo "CHANGES=$CHANGED_FILES" >> $GITHUB_ENV

    - name: Run Tests if Changes Detected
      if: env.CHANGES != ''
      run: |
        echo "Changes detected in test_file.txt: $CHANGES"
        npm run test

    - uses: actions/checkout@v2

    - name: Read .nvmrc
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      id: nvm

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

  npm-ci:
    name: Install Dependencies
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Check for Changes in test_file.txt
      id: changes
      run: |
        git fetch origin ${{ github.base_ref }}
        CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} | grep 'test_file.txt' || true)
        echo "CHANGES=$CHANGED_FILES" >> $GITHUB_ENV

    - name: Run Tests if Changes Detected
      if: env.CHANGES != ''
      run: |
        echo "Changes detected in test_file.txt: $CHANGES"
        npm run test

    - uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: "${{ needs.setup.outputs.node-version }}"
    
    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: ./node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - run: npm ci

  npm-test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: npm-ci
    steps:
    - name: Check for Changes in test_file.txt
      id: changes
      run: |
        git fetch origin ${{ github.base_ref }}
        CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} | grep 'test_file.txt' || true)
        echo "CHANGES=$CHANGED_FILES" >> $GITHUB_ENV

    - name: Run Tests if Changes Detected
      if: env.CHANGES != ''
      run: |
        echo "Changes detected in test_file.txt: $CHANGES"
        npm run test

    - uses: actions/checkout@v2

    - name: Use Cached node_modules
      uses: actions/cache@v3
      with:
        path: ./node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: "${{ needs.setup.outputs.node-version }}"

    - name: Add node_modules/.bin to PATH
      run: echo "${{ github.workspace }}/node_modules/.bin" >> $GITHUB_PATH
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
    - run: npm test

  nestjs-test:
    name: Test NestJS
    runs-on: ubuntu-latest
    needs: npm-ci
    steps:
    - name: Check for Changes in test_file.txt
      id: changes
      run: |
        git fetch origin ${{ github.base_ref }}
        CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} | grep 'test_file.txt' || true)
        echo "CHANGES=$CHANGED_FILES" >> $GITHUB_ENV

    - name: Run Tests if Changes Detected
      if: env.CHANGES != ''
      run: |
        echo "Changes detected in test_file.txt: $CHANGES"
        npm run test
    - uses: actions/checkout@v2

    - name: Use Cached node_modules
      uses: actions/cache@v3
      with:
        path: ./node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: "${{ needs.setup.outputs.node-version }}"

    - name: Add node_modules/.bin to PATH
      run: echo "${{ github.workspace }}/node_modules/.bin" >> $GITHUB_PATH
    
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
    
    - run: npm run test:nestjs

  mocha-test:
    name: Test Mocha
    runs-on: ubuntu-latest
    needs: npm-ci
    steps:
    - name: Check for Changes in test_file.txt
      id: changes
      run: |
        git fetch origin ${{ github.base_ref }}
        CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} | grep 'test_file.txt' || true)
        echo "CHANGES=$CHANGED_FILES" >> $GITHUB_ENV

    - name: Run Tests if Changes Detected
      if: env.CHANGES != ''
      run: |
        echo "Changes detected in test_file.txt: $CHANGES"
        npm run test
    
    - uses: actions/checkout@v2

    - name: Use Cached node_modules
      uses: actions/cache@v3
      with:
        path: ./node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: "${{ needs.setup.outputs.node-version }}"

    - name: Add node_modules/.bin to PATH
      run: echo "${{ github.workspace }}/node_modules/.bin" >> $GITHUB_PATH
    
    

    - run: npm run test:mocha
